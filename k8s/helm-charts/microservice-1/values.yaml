replicaCount: 2

image:
  repository: us-central1-docker.pkg.dev/nahuelgabe-test/dogfydiet-dev-docker-repo/microservice-1
  pullPolicy: IfNotPresent
  tag: "latest"
  containerPort: 3000

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations:
    iam.gke.io/gcp-service-account: dogfydiet-dev-microservice-1@nahuelgabe-test.iam.gserviceaccount.com
  name: "microservice-1"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "3000"
  prometheus.io/path: "/metrics"

podSecurityContext:
  fsGroup: 1001
  runAsNonRoot: true
  runAsUser: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 80
  #targetPort: 3000
  protocol: TCP
  targetPort: http # Referencing the named port of the container
  protocol: TCP


backendConfig:
  enabled: true
  healthCheck:
    requestPath: "/health"
    checkIntervalSec: 15
    timeoutSec: 5
    healthyThreshold: 2
    unhealthyThreshold: 2
    

# ingress:
#   enabled: false
#   className: ""
#   annotations: {}
#   hosts:
#     - host: 
#       paths:
#         - path: /
#           pathType: Prefix
#   tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - microservice-1
        topologyKey: kubernetes.io/hostname

# Environment variables
env:
  GOOGLE_CLOUD_PROJECT: "nahuelgabe-test"
  PUBSUB_TOPIC: "dogfydiet-dev-items-topic"
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  RATE_LIMIT: "100"
  CORS_ORIGIN: "https://nahueldog.duckdns.org,http://localhost:8080" # Add your frontend origin

# Probes configuration
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# PodDisruptionBudget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# NetworkPolicy
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: istio-system
      - namespaceSelector:
          matchLabels:
            name: default
      ports:
      - protocol: TCP
        port: 3000
  egress:
    - to: []
      ports:
      - protocol: TCP
        port: 443  # HTTPS to Google APIs
      - protocol: TCP
        port: 53   # DNS
      - protocol: UDP
        port: 53   # DNS